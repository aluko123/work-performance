

services:
  migrate:
    build: .
    command: ["bash", "-lc", "python -c 'from backend.database import init_db; init_db()' && alembic upgrade head"]
    environment:
      - PYTHONUNBUFFERED=1
      - PYTHONPATH=/app
      - REDIS_URL=redis://redis:6379/0
    env_file:
      - .env
    volumes:
      - ./data:/app/data

  backend:
    build: .
    ports:
      - "8000:8000"
    environment:
      - PYTHONUNBUFFERED=1
      - ARQ_REDIS_URL=redis://redis:6379
      - REDIS_URL=redis://redis:6379/0
    env_file:
      - .env
    volumes:
      - ./bert_classification:/app/bert_classification
      - ./data:/app/data
    cap_add:
      - SYS_PTRACE
    security_opt:
      - seccomp:unconfined
    depends_on:
      migrate:
        condition: service_completed_successfully
      redis:
        condition: service_started

  frontend:
    build:
      context: ./frontend-v2
      dockerfile: Dockerfile
      args:
        - VITE_API_BASE_URL=${PUBLIC_API_BASE_URL:-http://localhost:8000}
    ports:
      - "8001:80"
    depends_on:
      - backend

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: ["redis-server", "--appendonly", "yes"]

  arq_worker:
    build: .
    command: ["arq", "backend.worker.WorkerSettings"]
    environment:
      - PYTHONUNBUFFERED=1
      - ARQ_REDIS_URL=redis://redis:6379
      - REDIS_URL=redis://redis:6379/0
    env_file:
      - .env
    volumes:
      - ./bert_classification:/app/bert_classification
      - ./data:/app/data
    depends_on:
      migrate:
        condition: service_completed_successfully
      redis:
        condition: service_started

volumes:
  redis-data:
